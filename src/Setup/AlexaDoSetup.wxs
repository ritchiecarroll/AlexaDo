<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <Product Id="*" Name="AlexaDo" Language="1033" Version="!(bind.FileVersion.AlexaDo.exe)" Manufacturer="J. Ritchie Carroll" UpgradeCode="8cff82ac-af1b-491d-a4d5-045c639aa567">
    <Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" />

    <?if $(var.Platform) = x64 ?>
      <?define ApplicationDescription = "AlexaDo Amazon Echo Invocation Plug-in Application (64-bit)" ?>
    <?else ?>
      <?define ApplicationDescription = "AlexaDo Amazon Echo Invocation Plug-in Application (32-bit)" ?>
    <?endif ?>

    <PropertyRef Id="WIX_IS_NETFRAMEWORK_46_OR_LATER_INSTALLED"/>
    <Condition Message='This setup requires Microsoft .NET Framework 4.6 or greater - this will need to be installed before installation can continue.'>
      <![CDATA[Installed OR WIX_IS_NETFRAMEWORK_46_OR_LATER_INSTALLED]]>
    </Condition>

    <MajorUpgrade Schedule="afterInstallInitialize" DowngradeErrorMessage="A newer version of [ProductName] is already installed. Setup will now exit." />
    <MediaTemplate EmbedCab="yes" />

    <Feature Id="AlexaDoProductFeature" Title="AlexaDo Components" Level="1" Display="expand" ConfigurableDirectory="INSTALLFOLDER" Description="$(var.ApplicationDescription)">
        <ComponentRef Id="AlexaDo" />
        <ComponentRef Id="AlexaDoConfig" />
      
        <ComponentGroupRef Id="AlexaDoDependencyComponents" />
        <ComponentGroupRef Id="GSFDependencyComponents" />

        <Feature Id="AlexaDoPluginFeature" Title="Included Plug-ins" Description="AlexaDo plug-ins available in this installation package">
          <Feature Id="AppLauncherFeature" Title="Application Launcher" Description="Plug-in launches an executable when triggered via Echo commands. Includes &quot;OK Google&quot; and &quot;E-mail Me&quot; sample command defintions.">
            <ComponentGroupRef Id="AppLauncherComponents" />
          </Feature>
          <Feature Id="FrontPointSecurityFeature" Title="FrontPoint Security" Description="Plug-in allows control of a FrontPoint Security system triggered through Echo commands. Includes sample command defintions.">
            <ComponentGroupRef Id="FrontPointSecurityComponents" />
          </Feature>
        </Feature>
        <Feature Id="AlexaDoToolsFeature" Title="Additional Tools" Description="Additional utilities that make AlexaDo configuration easier and more secure">
          <Feature Id="ConfigCrypterFeature" Title="Config Crypter" Description="Utility to create encrypted configuration strings using locally generated and securely stored Key/IVs. Can only be launched with elevated privileges.">
            <ComponentGroupRef Id="ConfigCrypterComponents" />
          </Feature>
          <Feature Id="ConfigEditorFeature" Title="Configuration Editor" Description="Utility to simplify editing of primary AlexaDo configuration settings.">
            <ComponentGroupRef Id="ConfigEditorComponents" />
          </Feature>
        </Feature>

        <ComponentRef Id="Cleanup" />
    </Feature>

    <!-- User Interface -->
    <UIRef Id="WixUI_FeatureTree" />
    <UIRef Id="WixUI_ErrorProgressText" />
    
    <WixVariable Id="WixUIBannerBmp" Value="$(var.ProjectDir)\AlexaDoSetupBanner.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="$(var.ProjectDir)\AlexaDoSetupDialog.bmp" />
    <WixVariable Id="WixUILicenseRtf" Value="$(var.ProjectDir)\InstallLicense.rtf" />

    <Icon Id="AlexaDo.ico.exe" SourceFile="$(var.AlexaDo.TargetPath)" />
    <Icon Id="ConfigCrypter.ico.exe" SourceFile="$(var.ProjectDir)\ConfigCrypter.exe" />
    <Icon Id="ConfigEditor.ico.exe" SourceFile="$(var.ProjectDir)\ConfigEditor.exe" />

    <!-- Add/Remove Programs Icon -->
    <Property Id="ARPPRODUCTICON" Value="AlexaDo.ico.exe" />
    <Property Id="ARPCOMMENTS">$(var.ApplicationDescription)</Property>
    <Property Id="ARPURLINFOABOUT">https://github.com/ritchiecarroll/AlexaDo</Property>
  </Product>
  
  <Fragment>
    <Directory Id="TARGETDIR" Name="SourceDir">
      <?if $(var.Platform) = x64 ?>
      <Directory Id="ProgramFiles64Folder">
        <!-- C:\Program Files\AlexaDo -->
        <Directory Id="INSTALLFOLDER" Name="AlexaDo" />
      </Directory>
      <?else ?>
      <Directory Id="ProgramFilesFolder">
        <!-- C:\Program Files (x86)\AlexaDo -->
        <Directory Id="INSTALLFOLDER" Name="AlexaDo" />
      </Directory>
      <?endif ?>

      <Directory Id="ProgramMenuFolder">
        <Directory Id="ApplicationProgramsFolder" Name="AlexaDo" />
      </Directory>
    </Directory>
  </Fragment>

  <Fragment>
    <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
      <!-- Applications -->
      <Component Id="AlexaDo">
        <File Id="AlexaDo.exe" Name="$(var.AlexaDo.TargetFileName)" Source="$(var.AlexaDo.TargetPath)" />
        <Shortcut Id="AlexaDoStartMenuShortcut" Name="AlexaDo Echo Monitor" Icon="AlexaDo.ico.exe" Description="Amazon Echo Monitoring and Plug-in Invocation Application." WorkingDirectory="INSTALLFOLDER" Directory="ApplicationProgramsFolder" Advertise="yes" />
      </Component>

      <Component Id="AlexaDoConfig">
        <File Id="AlexaDo.exe.config" Name="$(var.AlexaDo.TargetFileName).config" Source="$(var.AlexaDo.TargetPath).config" />
      </Component>

      <!-- Cleanup -->
      <Component Id="Cleanup" Guid="{E4A3FC2E-4D4C-4A9B-A1D5-1B95BBC33E90}">
        <CreateFolder />
        <RemoveFolder Id="RemoveApplicationProgramsFolder" Directory="ApplicationProgramsFolder" On="uninstall" />
        <RemoveFolder Id="RemoveInstallFolder" Directory="INSTALLFOLDER" On="uninstall" />
      </Component>
    </ComponentGroup>

    <!-- AlexaDo Dependencies -->
    <ComponentGroup Id="AlexaDoDependencyComponents" Directory="INSTALLFOLDER">
      <!-- AlexaDo Plug-in Dependency -->
      <Component Id="AlexaDoPlugin">
        <File Id="AlexaDoPlugin.dll" Name="$(var.AlexaDoPlugin.TargetFileName)" Source="$(var.AlexaDoPlugin.TargetPath)" />
      </Component>

      <!-- Json Dependencies -->
      <Component Id="Json">
        <File Id="Json.dll" Name="Json.dll" Source="$(var.SolutionDir)\packages\JSON.1.0.1\lib\net40\Json.dll" />
      </Component>

      <!-- log4net Dependencies -->
      <Component Id="log4net">
        <File Id="log4net.dll" Name="log4net.dll" Source="$(var.SolutionDir)\packages\log4net.2.0.5\lib\net45-full\log4net.dll" />
      </Component>
    </ComponentGroup>
    
    <!-- Included Plug-ins -->
    <ComponentGroup Id="AppLauncherComponents" Directory="INSTALLFOLDER">
      <Component Id="AppLauncher">
        <File Id="AppLauncher.dll" Name="$(var.AppLauncher.TargetFileName)" Source="$(var.AppLauncher.TargetPath)" />
      </Component>
      <Component Id="AppLauncherCommands">
        <File Id="AppLauncher.commands" Name="$(var.AppLauncher.ProjectName).commands" Source="$(var.AppLauncher.TargetDir)$(var.AppLauncher.ProjectName).commands" />
      </Component>
    </ComponentGroup>

    <ComponentGroup Id="FrontPointSecurityComponents" Directory="INSTALLFOLDER">
      <Component Id="FrontPointSecurity">
        <File Id="FrontPointSecurity.dll" Name="$(var.FrontPointSecurity.TargetFileName)" Source="$(var.FrontPointSecurity.TargetPath)" />
      </Component>
      <Component Id="FrontPointSecurityCommands">
        <File Id="FrontPointSecurity.commands" Name="$(var.FrontPointSecurity.ProjectName).commands" Source="$(var.FrontPointSecurity.TargetDir)$(var.FrontPointSecurity.ProjectName).commands" />
      </Component>
    </ComponentGroup>

    <!-- Included Tools -->
    <ComponentGroup Id="ConfigCrypterComponents" Directory="INSTALLFOLDER">
      <Component Id="ConfigCrypter">
        <File Id="ConfigCrypter.exe" Name="ConfigCrypter.exe" Source="$(var.ProjectDir)\ConfigCrypter.exe" />
        <Shortcut Id="ConfigurationCrypterStartMenuShortcut" Name="Cipher Key Manager" Icon="ConfigCrypter.ico.exe" Description="Tool used to manage cryptographic cipher keys." WorkingDirectory="INSTALLFOLDER" Directory="ApplicationProgramsFolder" Advertise="yes" />
      </Component>
      <Component Id="ConfigCrypterConfig">
        <File Id="ConfigCrypter.exe.config" Name="ConfigCrypter.exe.config" Source="$(var.ProjectDir)\ConfigCrypter.exe.config" />
      </Component>
    </ComponentGroup>

    <ComponentGroup Id="ConfigEditorComponents" Directory="INSTALLFOLDER">
      <Component Id="ConfigEditor">
        <File Id="ConfigEditor.exe" Name="ConfigEditor.exe" Source="$(var.ProjectDir)\ConfigEditor.exe" />
        <Shortcut Id="ConfigEditorStartMenuShortcut" Name="XML Configuration Editor" Icon="ConfigEditor.ico.exe" Description="Tool used edit the XML configuration file for the AlexaDo application." WorkingDirectory="INSTALLFOLDER" Directory="ApplicationProgramsFolder" Advertise="yes" />
      </Component>
      <Component Id="ConfigEditorConfig">
        <File Id="ConfigEditor.exe.config" Name="ConfigEditor.exe.config" Source="$(var.ProjectDir)\ConfigEditor.exe.config" />
      </Component>
    </ComponentGroup>

    <!-- GSF Dependencies -->
    <ComponentGroup Id="GSFDependencyComponents" Directory="INSTALLFOLDER">
      <Component Id="GSF.Core">
        <File Id="GSF.Core.dll" Name="GSF.Core.dll" Source="$(var.SolutionDir)\packages\GSF.Core.2.1.391-beta\lib\net46\GSF.Core.dll" />
      </Component>
    </ComponentGroup>
  </Fragment>
</Wix>